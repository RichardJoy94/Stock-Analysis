import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import statsmodels.api as sm
import numpy as np

# Download historical stock data for Intel (ticker: INTC)
ticker_symbol = 'INTC'
start_date = '2020-01-01'
end_date = '2024-10-17'
intel_data = yf.download(ticker_symbol, start=start_date, end=end_date)

# Calculate daily returns
intel_data['Daily_Return'] = intel_data['Close'].pct_change()

# Calculate Moving Averages
intel_data['MA20'] = intel_data['Close'].rolling(window=20).mean()
intel_data['MA50'] = intel_data['Close'].rolling(window=50).mean()

# Calculate Bollinger Bands
intel_data['20 Day STD'] = intel_data['Close'].rolling(window=20).std()
intel_data['Upper Band'] = intel_data['MA20'] + (intel_data['20 Day STD'] * 2)
intel_data['Lower Band'] = intel_data['MA20'] - (intel_data['20 Day STD'] * 2)

# Plot closing prices and Moving Averages
plt.figure(figsize=(14, 7))
plt.plot(intel_data['Close'], label='Intel Closing Prices')
plt.plot(intel_data['MA20'], label='20 Day Moving Average', linestyle='--')
plt.plot(intel_data['MA50'], label='50 Day Moving Average', linestyle='--')
plt.fill_between(intel_data.index, intel_data['Upper Band'], intel_data['Lower Band'], color='grey', alpha=0.2, label='Bollinger Bands')
plt.title('Intel Corporation Stock Analysis')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()
plt.show()

# ARIMA Model for Forecasting
intel_data['Close'] = intel_data['Close'].fillna(method='ffill')
intel_data = intel_data.dropna()
arima_model = sm.tsa.ARIMA(intel_data['Close'], order=(5, 1, 0))
arima_result = arima_model.fit(disp=False)

# Forecast the next 30 days
forecast = arima_result.forecast(steps=30)
forecast_dates = pd.date_range(intel_data.index[-1], periods=30, freq='B')
forecast_series = pd.Series(forecast[0], index=forecast_dates)

# Plot historical and forecasted data
plt.figure(figsize=(14, 7))
plt.plot(intel_data['Close'], label='Historical Prices')
plt.plot(forecast_series, label='Forecasted Prices', linestyle='--')
plt.title('Intel Corporation Stock Prediction')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()
plt.show()
